name: Build and Deploy to GKE

on:
  push:
    branches: [ master ]

env:
  PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
  GKE_CLUSTER: gke-cluster
  GKE_ZONE: us-central1
  IMAGE: shortlet-app

jobs:
  setup-build-publish-deploy:
    name: Setup, Build, Publish, and Deploy
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v2

      # Authenticate with Google Cloud
    - name: Authenticate to Google Cloud
      uses: google-github-actions/auth@v1
      with:
        credentials_json: ${{ secrets.GCP_SA_KEY }}


    - name: Setup gcloud CLI
      uses: google-github-actions/setup-gcloud@v1
      with:
        service_account_key: ${{ secrets.GCP_SA_KEY }}
        project_id: ${{ secrets.GCP_PROJECT_ID }}

    - name: Configure Docker
      run: |
        gcloud auth configure-docker

    - name: Build Docker image
      run: |
        docker build -t gcr.io/$PROJECT_ID/$IMAGE:$latest .

    - name: Push Docker image to GCR
      run: |
        docker push gcr.io/$PROJECT_ID/$IMAGE:$latest

    # - name: Get GKE Credentials
    #   run: |
    #     gcloud container clusters get-credentials "$GKE_CLUSTER" --zone "$GKE_ZONE"

    # - name: Deploy to GKE
    #   run: |
    #     kubectl set image deployment/time-api time-api=gcr.io/$PROJECT_ID/$IMAGE:$GITHUB_SHA
    #     kubectl rollout status deployment/time-api

    # - name: Test the deployed application
    #   run: |
    #     EXTERNAL_IP=$(kubectl get service time-api-service -o jsonpath="{.status.loadBalancer.ingress[0].ip}")
    #     curl http://$EXTERNAL_IP
    #     curl http://$EXTERNAL_IP/welcome